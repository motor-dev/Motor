---@meta

local function use(var)return var end

---@class Generator
---@field name string The name of the generator.
---@field group string The build group this generator belongs to. The group must be declared using `context:declare_group`.
---                    Groups can be shared between different build commands.
---@field env Environment The default environment. Tasks generated from this generator will derive from this environment,
---                       unless another environment is explicitly requested.
Generator = {}

---Create a task that will transform the given inputs into the given outputs.
---@param tool string The name of the tool.
---@param inputs? Node|Node[] The initial list of inputs. Other inputs can be added after the task creation using `Task:add_input`.
---@param outputs? string Node|Node[] The initial list of outputs. Other outputs can be added after the task creation using `Task:add_output`.
---@param env? Environment The default environment to use for tasks generated by this generator.
---@return Task A new task object.
function Generator:__call(tool, inputs, outputs, env)
    use(tool) use(inputs) use(outputs) use(env)
    return Generator
end