local context = ...

local config = Motor.library('motor.config')
local kernel = Motor.library('motor.kernel')
                    :add_public_dependency(config)
for _, include in ipairs(context:search(kernel.path, 'api.cpu', true)) do
    kernel:add_public_include(include)
end
local minitl = Motor.library('motor.minitl')
                    :add_public_dependency(config)
                    :add_public_dependency(kernel)
local core = Motor.library('motor.core')
                  :add_public_dependency(config)
                  :add_public_dependency(kernel)
                  :add_public_dependency(minitl)
local meta = Motor.library('motor.meta')
                  :add_public_dependency(config)
                  :add_public_dependency(kernel)
                  :add_public_dependency(minitl)
                  :add_public_dependency(core)
local filesystem = Motor.library('motor.filesystem')
                        :add_public_dependency(config)
                        :add_public_dependency(kernel)
                        :add_public_dependency(minitl)
                        :add_public_dependency(core)
                        :add_public_dependency(meta)
